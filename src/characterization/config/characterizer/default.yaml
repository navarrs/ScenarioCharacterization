processor:
    config:
      return_criterion: ${return_criterion} # Can be 'critical', 'average', or 'none'
      scenario_type: ${scenario_type}

      batch_size: ${batch_size}
      num_workers: ${num_workers}
      shuffle: ${shuffle}

      save: ${save}
      overwrite: ${overwrite}
      output_path: ${paths.output_paths.feature_cache_path}
      feature_path: ${paths.output_paths.feature_cache_path}

      features:
        - speed
        - speed_limit_diff
        - acceleration
        - deceleration
        - jerk
        - waiting_period
        - waiting_interval
        - waiting_distance
        - trajectory_type
        - kalman_difficulty
        - separation
        - intersection
        - collision
        - mttcp
        - thw
        - ttc
        - drac

characterizer:
  config:
    score_wrt_ego_only: ${score_wrt_ego_only}
    aggregated_score_weight: ${aggregated_score_weight}
    score_clip:
      min: 0.0
      max: 200.0

    # NOTE: if weights are not specified here, will use default values from FeatureWeights in schemas/detections.py.
    weights:
      # Individual features
      speed: 0.0
      speed_diff: 0.0
      acceleration: 0.0
      deceleration: 0.0
      jerk: 0.0
      waiting_period: 0.0
      waiting_intervals: 0.0
      waiting_distances: 0.0

      # Individual features from Unitraj
      trajectory_type: 0.0
      kalman_difficulty: 0.0

      # Interaction features
      collision: 1.0
      mttcp: 0.0
      thw: 0.0
      ttc: 0.0
      drac: 0.0

      # # Individual features
      # speed: 0.1
      # speed_diff: 0.2
      # acceleration: 1.0
      # deceleration: 1.0
      # jerk: 1.0
      # waiting_period: 1.0
      # waiting_intervals: 1.0
      # waiting_distances: 1.0

      # # Individual features from Unitraj
      # trajectory_type: 0.1
      # kalman_difficulty: 1.0

      # # Interaction features
      # collision: 2.0
      # mttcp: 2.0
      # thw: 1.0
      # ttc: 1.0
      # drac: 0.2

    # NOTE: if detections are not specified here, will use default values from FeatureDetections in schemas/detections.py.
    detections:
      speed: 13 # in m/s, i.e. ~47 km/h or ~30 mph
      speed_limit_diff: 5 # in m/s, i.e. ~30 km/h over the speed limit
      acceleration: 10 # in m/s^2
      deceleration: 5 # in m/s^2
      jerk: 1.5 # in m/s^3
      waiting_period: 4 # in seconds
      waiting_intervals: 8 # in number of intervals
      waiting_distances: 8 # in meters
      kalman_difficulty: 50.0
      mttcp: 4 # in s
      thw: 2 # in s
      ttc: 2 # in s
      drac: 3 # in m/s^2
